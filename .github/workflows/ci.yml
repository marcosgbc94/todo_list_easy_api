name: Continuous Integration

on:
  push:
    branches: [ main ] # Se activa cada vez que haces push a la rama 'main'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest # Se ejecuta en un servidor virtual de GitHub con Ubuntu

    steps:
    - name: Checkout del código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instalar dependencias de Python
      run: pip install -r requirements.txt

    - name: Crear archivo .env para las pruebas
      run: |
        echo "API_PORT=8000" >> .env
        echo "DB_USER=db_user" >> .env
        echo "DB_PASSWORD=db_password" >> .env
        echo "DB_NAME=db_name" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_HOST=database" >> .env
        echo "TEST_DB_USER=db_user" >> .env
        echo "TEST_DB_PASSWORD=db_password" >> .env
        echo "TEST_DB_NAME=db_name_test" >> .env
        echo "TEST_DB_PORT=5432" >> .env
        echo "TEST_DB_HOST=test_database" >> .env
        echo "API_NAME=TodoListCI" >> .env
        echo "ENVIRONMENT=test" >> .env
        echo "API_SECRET_KEY=secret_for_ci" >> .env
        echo "MAX_DB_CONNECTION_WAIT=30" >> .env
        echo "OBSERVABILITY_ENABLED=false" >> .env
        echo "DB=postgres" >> .env

    - name: Levantar servicios de prueba con Docker Compose
      run: docker compose --profile test up -d

    - name: Esperar a que la base de datos de pruebas esté lista
      run: sleep 10 # Una espera simple pero efectiva para entornos de CI

    - name: Ejecutar Pytest dentro del contenedor
      run: docker compose exec -T backend pytest tests/

  build-and-push:
    runs-on: ubuntu-latest
    needs: test # <-- Este job solo se ejecuta si el job 'test' fue exitoso

    steps:
    - name: Checkout del código
      uses: actions/checkout@v3

    - name: Login a Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Construir y subir la imagen de Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist-api:latest # ej: marcosgbc94/todolist-api:latest